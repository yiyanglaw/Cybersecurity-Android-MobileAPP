import 'dart:convert';
import 'dart:io';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:file_picker/file_picker.dart';

class MalwareDetectionPage extends StatefulWidget {
  @override
  _MalwareDetectionPageState createState() => _MalwareDetectionPageState();
}

class _MalwareDetectionPageState extends State<MalwareDetectionPage> {
  String? _scanType;
  String? _filePath;
  String? _url;
  String _result = '';
  bool _isLoading = false;

  Future<void> _uploadFile(String filePath) async {
    setState(() {
      _isLoading = true;
    });

    var request = http.MultipartRequest(
      'POST',
      Uri.parse('https://flask-trya.onrender.com/scan_file'), // Update URL accordingly
    );
    request.files.add(await http.MultipartFile.fromPath('file', filePath));
    var res = await request.send();

    if (res.statusCode == 200) {
      var responseData = await res.stream.toBytes();
      var responseString = String.fromCharCodes(responseData);
      setState(() {
        _result = responseString;
      });
    } else {
      setState(() {
        _result = 'Error: ${res.statusCode}';
      });
    }

    setState(() {
      _isLoading = false;
    });
  }

  Future<void> _scanUrl(String url) async {
    setState(() {
      _isLoading = true;
    });

    var response = await http.post(
      Uri.parse('https://flask-trya.onrender.com/scan_url'), // Update URL accordingly
      headers: {'Content-Type': 'application/json'},
      body: jsonEncode({'url': url}),
    );

    if (response.statusCode == 200) {
      setState(() {
        _result = response.body;
      });
    } else {
      setState(() {
        _result = 'Error: ${response.statusCode}';
      });
    }

    setState(() {
      _isLoading = false;
    });
  }

  void _pickFile() async {
    FilePickerResult? result = await FilePicker.platform.pickFiles();

    if (result != null) {
      _filePath = result.files.single.path;
      setState(() {});
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('VirusTotal Scanner'),
      ),
      body: Stack(
        children: [
          Container(
            decoration: BoxDecoration(
              image: DecorationImage(
                image: AssetImage('assets/background6.jpg'),
                fit: BoxFit.cover,
              ),
            ),
          ),
          Center(
            child: Padding(
              padding: const EdgeInsets.all(16.0),
              child: SingleChildScrollView(
                child: Column(
                  mainAxisSize: MainAxisSize.min,
                  crossAxisAlignment: CrossAxisAlignment.center,
                  children: <Widget>[
                    Container(
                      padding: EdgeInsets.symmetric(horizontal: 12.0),
                      decoration: BoxDecoration(
                        color: Colors.white,
                        borderRadius: BorderRadius.circular(8.0),
                      ),
                      child: DropdownButton<String>(
                        value: _scanType,
                        hint: Text('Select scan type', style: TextStyle(color: Colors.black)),
                        items: [
                          DropdownMenuItem(
                            value: 'file',
                            child: Text('File', style: TextStyle(color: Colors.black)),
                          ),
                          DropdownMenuItem(
                            value: 'url',
                            child: Text('URL', style: TextStyle(color: Colors.black)),
                          ),
                        ],
                        onChanged: (value) {
                          setState(() {
                            _scanType = value;
                            _result = '';
                          });
                        },
                        dropdownColor: Colors.white,
                        style: TextStyle(color: Colors.black),
                        underline: SizedBox(), // Removes the underline
                        iconEnabledColor: Colors.black,
                      ),
                    ),
                    SizedBox(height: 16.0),
                    if (_scanType == 'file') ...[
                      ElevatedButton(
                        onPressed: _pickFile,
                        child: Text('Pick File'),
                      ),
                      if (_filePath != null)
                        Padding(
                          padding: const EdgeInsets.only(top: 8.0),
                          child: Text('File: $_filePath', style: TextStyle(color: Colors.white)),
                        ),
                    ] else if (_scanType == 'url') ...[
                      TextField(
                        onChanged: (value) {
                          _url = value;
                        },
                        decoration: InputDecoration(
                          hintText: 'Enter URL',
                          filled: true,
                          fillColor: Colors.white,
                          border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(8.0),
                          ),
                          hintStyle: TextStyle(color: Colors.grey),
                        ),
                        style: TextStyle(color: Colors.black),
                      ),
                    ],
                    SizedBox(height: 20),
                    ElevatedButton(
                      onPressed: () {
                        if (_scanType == 'file' && _filePath != null) {
                          _uploadFile(_filePath!);
                        } else if (_scanType == 'url' && _url != null) {
                          _scanUrl(_url!);
                        }
                      },
                      child: Text('Scan'),
                    ),
                    if (_isLoading)
                      Padding(
                        padding: const EdgeInsets.symmetric(vertical: 16.0),
                        child: Center(child: CircularProgressIndicator()),
                      ),
                    SizedBox(height: 20),
                    Text(
                      'Result: $_result',
                      style: TextStyle(fontSize: 18.0, color: Colors.white),
                    ),
                  ],
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }
}
